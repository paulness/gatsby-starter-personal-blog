{"version":3,"sources":["webpack:///path---autocomplete-with-static-files-part-4-f9b151459d8ace908341.js","webpack:///./.cache/json/autocomplete-with-static-files-part-4.json"],"names":["webpackJsonp","791","module","exports","data","post","id","html","fields","slug","prefix","frontmatter","title","subTitle","cover","childImageSharp","resize","src","author","footnote","site","siteMetadata","facebook","appId","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,GAAA,4HAAAC,KAAA,k7WAAqwXC,QAA+QC,KAAA,0CAAAC,OAAA,cAAuEC,aAAgBC,MAAA,+FAAAC,SAAA,kNAAAC,OAA6UC,iBAAmBC,QAAUC,IAAA,yEAA8EC,QAAWZ,GAAA,2EAAAC,KAAA,iKAAuPY,UAAab,GAAA,6EAAAC,KAAA,IAA4Fa,MAASC,cAAgBC,UAAYC,MAAA,OAAcC,aAAgBf,KAAA","file":"path---autocomplete-with-static-files-part-4-f9b151459d8ace908341.js","sourcesContent":["webpackJsonp([208487130422219],{\n\n/***/ 791:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"id\":\"/root/project/content/posts/2017-11-23--autocomplete-with-static-files-part-4/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>This post finalizes the autocomplete series; you will be creating a textbox with autocomplete. The autocomplete will retrieve its data from pre-generated static files in a folder on a web server, as opposed to a server API with searching capabilities.</p>\\n<h3>Dynamic content vs static content</h3>\\n<p>On a traditional web server when a user searches for JO, something similar to the following will occur:</p>\\n<ol>\\n<li>The client sends a search request to the server, containing the partial word the user has typed. e.g., JO</li>\\n<li>The partial word is then extracted, by server-side website/API code</li>\\n<li>Database queries would be made to find records starting with JO</li>\\n<li>Any results would then be returned to the user</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> userSearchedFor <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"JO\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> normalUrl <span class=\\\"token operator\\\">=</span>\\n<span class=\\\"token string\\\">\\\"http://www.javaserver.com/searchCustomer?name=\\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token function\\\">encodeURIComponent</span><span class=\\\"token punctuation\\\">(</span>userSearchedFor<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toUpperCase</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>With static file autocomplete, the flow is as follows:</p>\\n<ol>\\n<li>Request made to the server</li>\\n<li>We are looking for an exact file called JO or JO.json</li>\\n<li>If that file exists, we return the file contents, which have already been prepared for us</li>\\n<li>If it doesnâ€™t exist (404), we must assume there are no results for JO.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> userSearchedFor <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"JO\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> searchUrl <span class=\\\"token operator\\\">=</span>\\n<span class=\\\"token string\\\">\\\"http://your-server.com/static-autocomplete-files/customers/\\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token function\\\">encodeURIComponent</span><span class=\\\"token punctuation\\\">(</span>userSearchedFor<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toUpperCase</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'.json'</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3>Demo in action</h3>\\n<iframe src=\\\"https://rawgit.com/paulness/AutocompleteUsageWithStaticFiles/master/index.htm\\\" style=\\\"width:100%; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\\n<h3>Snippet source code</h3>\\n<p><a href=\\\"https://github.com/paulness/AutocompleteUsageWithStaticFiles\\\">Edit on GitHub</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\">    <span class=\\\"token operator\\\">&lt;</span>link rel<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"stylesheet\\\"</span> href<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"autocomplete/auto-complete.css\\\"</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>label <span class=\\\"token keyword\\\">for</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"txt-autocomplete\\\"</span><span class=\\\"token operator\\\">></span>Start typing<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>label<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>input id<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"txt-autocomplete\\\"</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>script src<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"autocomplete/auto-complete.min.js\\\"</span><span class=\\\"token operator\\\">></span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>script<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>script<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token keyword\\\">var</span> xhr<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">autoComplete</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            selector<span class=\\\"token punctuation\\\">:</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'txt-autocomplete'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            minChars<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n            delay<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n            source<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>term<span class=\\\"token punctuation\\\">,</span> response<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span> xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">abort</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token punctuation\\\">}</span>\\n                xhr <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">XMLHttpRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"GET\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"autocomplete/results/\\\"</span> <span class=\\\"token operator\\\">+</span> term<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toUpperCase</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\".json\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onload</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>xhr<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                        <span class=\\\"token function\\\">response</span><span class=\\\"token punctuation\\\">(</span>JSON<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span>xhr<span class=\\\"token punctuation\\\">.</span>responseText<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n                xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            renderItem<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">,</span> search<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'&lt;div class=\\\"autocomplete-suggestion\\\" data-countryregion=\\\"'</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span>additionalInfo<span class=\\\"token punctuation\\\">.</span>region <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'\\\">'</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span>results <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'&lt;/div>'</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            onSelect<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">,</span> term<span class=\\\"token punctuation\\\">,</span> item<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'You have selected '</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'. Which is in the region: '</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAttribute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data-countryregion'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>script<span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>Dependencies:</p>\\n<ul>\\n<li><a href=\\\"https://goodies.pixabay.com/javascript/auto-complete/demo.html\\\">AutoCompleteJs</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/autocomplete-with-static-files-part-4/\",\"prefix\":\"2017-11-23\"},\"frontmatter\":{\"title\":\"Autocomplete with static files [4/4] - Implementing autocomplete with generated static files\",\"subTitle\":\"At this stage, we should have already have generated our 'data source' of autocomplete JSON files. We can now finally implement a working text box with autocomplete functionality, which consumes these files.\",\"cover\":{\"childImageSharp\":{\"resize\":{\"src\":\"/static/demo-in-action-4c5d082bc75c4eb6a75de681c6c2ed0c-ada8c.jpg\"}}}}},\"author\":{\"id\":\"/root/project/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Paul S. Ness</strong> Software engineer with ten years of experience in a variety of industries such travel, payments, medical and publishing.</p>\"},\"footnote\":{\"id\":\"/root/project/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/autocomplete-with-static-files-part-4/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---autocomplete-with-static-files-part-4-f9b151459d8ace908341.js","module.exports = {\"data\":{\"post\":{\"id\":\"/root/project/content/posts/2017-11-23--autocomplete-with-static-files-part-4/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>This post finalizes the autocomplete series; you will be creating a textbox with autocomplete. The autocomplete will retrieve its data from pre-generated static files in a folder on a web server, as opposed to a server API with searching capabilities.</p>\\n<h3>Dynamic content vs static content</h3>\\n<p>On a traditional web server when a user searches for JO, something similar to the following will occur:</p>\\n<ol>\\n<li>The client sends a search request to the server, containing the partial word the user has typed. e.g., JO</li>\\n<li>The partial word is then extracted, by server-side website/API code</li>\\n<li>Database queries would be made to find records starting with JO</li>\\n<li>Any results would then be returned to the user</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> userSearchedFor <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"JO\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> normalUrl <span class=\\\"token operator\\\">=</span>\\n<span class=\\\"token string\\\">\\\"http://www.javaserver.com/searchCustomer?name=\\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token function\\\">encodeURIComponent</span><span class=\\\"token punctuation\\\">(</span>userSearchedFor<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toUpperCase</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>With static file autocomplete, the flow is as follows:</p>\\n<ol>\\n<li>Request made to the server</li>\\n<li>We are looking for an exact file called JO or JO.json</li>\\n<li>If that file exists, we return the file contents, which have already been prepared for us</li>\\n<li>If it doesnâ€™t exist (404), we must assume there are no results for JO.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> userSearchedFor <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"JO\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> searchUrl <span class=\\\"token operator\\\">=</span>\\n<span class=\\\"token string\\\">\\\"http://your-server.com/static-autocomplete-files/customers/\\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token function\\\">encodeURIComponent</span><span class=\\\"token punctuation\\\">(</span>userSearchedFor<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toUpperCase</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'.json'</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3>Demo in action</h3>\\n<iframe src=\\\"https://rawgit.com/paulness/AutocompleteUsageWithStaticFiles/master/index.htm\\\" style=\\\"width:100%; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\\n<h3>Snippet source code</h3>\\n<p><a href=\\\"https://github.com/paulness/AutocompleteUsageWithStaticFiles\\\">Edit on GitHub</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\">    <span class=\\\"token operator\\\">&lt;</span>link rel<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"stylesheet\\\"</span> href<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"autocomplete/auto-complete.css\\\"</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>label <span class=\\\"token keyword\\\">for</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"txt-autocomplete\\\"</span><span class=\\\"token operator\\\">></span>Start typing<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>label<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>input id<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"txt-autocomplete\\\"</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>script src<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"autocomplete/auto-complete.min.js\\\"</span><span class=\\\"token operator\\\">></span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>script<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>script<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token keyword\\\">var</span> xhr<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">autoComplete</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            selector<span class=\\\"token punctuation\\\">:</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'txt-autocomplete'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            minChars<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n            delay<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n            source<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>term<span class=\\\"token punctuation\\\">,</span> response<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span> xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">abort</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token punctuation\\\">}</span>\\n                xhr <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">XMLHttpRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"GET\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"autocomplete/results/\\\"</span> <span class=\\\"token operator\\\">+</span> term<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toUpperCase</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\".json\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onload</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>xhr<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                        <span class=\\\"token function\\\">response</span><span class=\\\"token punctuation\\\">(</span>JSON<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span>xhr<span class=\\\"token punctuation\\\">.</span>responseText<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n                xhr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            renderItem<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">,</span> search<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'&lt;div class=\\\"autocomplete-suggestion\\\" data-countryregion=\\\"'</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span>additionalInfo<span class=\\\"token punctuation\\\">.</span>region <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'\\\">'</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span>results <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'&lt;/div>'</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            onSelect<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">,</span> term<span class=\\\"token punctuation\\\">,</span> item<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'You have selected '</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'. Which is in the region: '</span> <span class=\\\"token operator\\\">+</span> item<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAttribute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data-countryregion'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>script<span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>Dependencies:</p>\\n<ul>\\n<li><a href=\\\"https://goodies.pixabay.com/javascript/auto-complete/demo.html\\\">AutoCompleteJs</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/autocomplete-with-static-files-part-4/\",\"prefix\":\"2017-11-23\"},\"frontmatter\":{\"title\":\"Autocomplete with static files [4/4] - Implementing autocomplete with generated static files\",\"subTitle\":\"At this stage, we should have already have generated our 'data source' of autocomplete JSON files. We can now finally implement a working text box with autocomplete functionality, which consumes these files.\",\"cover\":{\"childImageSharp\":{\"resize\":{\"src\":\"/static/demo-in-action-4c5d082bc75c4eb6a75de681c6c2ed0c-ada8c.jpg\"}}}}},\"author\":{\"id\":\"/root/project/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Paul S. Ness</strong> Software engineer with ten years of experience in a variety of industries such travel, payments, medical and publishing.</p>\"},\"footnote\":{\"id\":\"/root/project/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/autocomplete-with-static-files-part-4/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/autocomplete-with-static-files-part-4.json\n// module id = 791\n// module chunks = 208487130422219"],"sourceRoot":""}